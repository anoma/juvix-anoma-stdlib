module AnomaV2.Specs;

import Stdlib.Prelude open;
import Data.Set as Set open;
import Data.Map as Map open using {Map};
import AnomaV2.MathProperty as MathProperty;
import AnomaV2.Delta as Delta open using {Delta};
import AnomaV2.CommitmentTree as CommitmentTree;
import AnomaV2.NullifierSet as NullifierSet;
import AnomaV2.ProvingSystem as ProvingSystem;

import AnomaV2.Resource as Resource open using {Resource};
import AnomaV2.Transaction as Transaction open using {Transaction};

-- TODO Continue here
{-
module Machine;
  trait
  type Machine :=
    mkMachine {
      create : Set CommitmentTree.Root
        -> Set Transaction.Action
        -> Delta
        -> Transaction.Preference
        -> Transaction;
      compose : Transaction -> Transaction -> Transaction;
      verify : Transaction.Transaction -> Bool

    };
end;
open Machine using {Machine} public;
-}
